import { NextApiRequest, NextApiResponse } from 'next';
import { getUserFromRequest } from '../../../lib/telegram-auth';

// Default wish categories with Russian names
const wishCategories = [
  {
    id: 'romantic',
    name: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ',
    nameEn: 'Romantic',
    description: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –∂–µ–ª–∞–Ω–∏—è –∏ —Å—é—Ä–ø—Ä–∏–∑—ã',
    icon: 'üíï'
  },
  {
    id: 'adventure',
    name: '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è',
    nameEn: 'Adventure',
    description: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö',
    icon: 'üåç'
  },
  {
    id: 'relaxation',
    name: '–û—Ç–¥—ã—Ö',
    nameEn: 'Relaxation',
    description: '–°–ø–æ–∫–æ–π–Ω—ã–π –æ—Ç–¥—ã—Ö –∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è',
    icon: 'üßò'
  },
  {
    id: 'creative',
    name: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
    nameEn: 'Creative',
    description: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è –∏ —Ö–æ–±–±–∏',
    icon: 'üé®'
  },
  {
    id: 'food',
    name: '–ï–¥–∞',
    nameEn: 'Food',
    description: '–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ –∂–µ–ª–∞–Ω–∏—è –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã',
    icon: 'üçΩÔ∏è'
  },
  {
    id: 'gifts',
    name: '–ü–æ–¥–∞—Ä–∫–∏',
    nameEn: 'Gifts',
    description: '–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –∏ —Å—é—Ä–ø—Ä–∏–∑—ã',
    icon: 'üéÅ'
  },
  {
    id: 'experiences',
    name: '–í–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è',
    nameEn: 'Experiences',
    description: '–ù–æ–≤—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –∏ —ç–º–æ—Ü–∏–∏',
    icon: '‚ú®'
  },
  {
    id: 'health',
    name: '–ó–¥–æ—Ä–æ–≤—å–µ',
    nameEn: 'Health',
    description: '–ó–∞–±–æ—Ç–∞ –æ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –∫—Ä–∞—Å–æ—Ç–µ',
    icon: 'üí™'
  },
  {
    id: 'learning',
    name: '–û–±—É—á–µ–Ω–∏–µ',
    nameEn: 'Learning',
    description: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤',
    icon: 'üìö'
  },
  {
    id: 'general',
    name: '–û–±—â–∏–µ',
    nameEn: 'General',
    description: '–û–±—â–∏–µ –∂–µ–ª–∞–Ω–∏—è',
    icon: 'üí´'
  }
];

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'GET') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const user = await getUserFromRequest(req);
    if (!user) {
      return res.status(401).json({ error: 'Unauthorized' });
    }

    return res.status(200).json({ categories: wishCategories });

  } catch (error) {
    console.error('Get wish categories error:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}