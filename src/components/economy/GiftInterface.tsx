'use client';

import { useState, useEffect } from 'react';
import { GiftWishRequest, EconomyQuotas } from '@/types/quest-economy';
import WishGifter from '../wishes/WishGifter';

interface GiftInterfaceProps {
  currentUserId: string;
  partnerUserId: string;
  partnerName: string;
  onGiftSent?: () => void;
}

const quickGiftPresets = [
  {
    id: 'morning-coffee',
    name: '–£—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—Ñ–µ',
    emoji: '‚òï',
    type: 'green' as const,
    amount: 1,
    message: '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ö–æ—Ñ–µ –≤ –ø–æ—Å—Ç–µ–ª—å üíï',
    description: '–ù–∞—á–Ω–∏—Ç–µ –¥–µ–Ω—å —Å –∑–∞–±–æ—Ç—ã'
  },
  {
    id: 'hug-pack',
    name: '–ü–∞—á–∫–∞ –æ–±–Ω–∏–º–∞—à–µ–∫',
    emoji: 'ü§ó',
    type: 'green' as const,
    amount: 3,
    message: '–û–±–Ω–∏–º–∞—à–∫–∏ –¥–ª—è —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!',
    description: '3 –∑–µ–ª–µ–Ω—ã—Ö –∂–µ–ª–∞–Ω–∏—è'
  },
  {
    id: 'movie-night',
    name: '–í–µ—á–µ—Ä –∫–∏–Ω–æ',
    emoji: 'üçø',
    type: 'blue' as const,
    amount: 1,
    message: '–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ-—Ç–æ –≤–º–µ—Å—Ç–µ?',
    description: '–£—é—Ç–Ω—ã–π –≤–µ—á–µ—Ä –≤–¥–≤–æ–µ–º'
  },
  {
    id: 'massage-time',
    name: '–í—Ä–µ–º—è –º–∞—Å—Å–∞–∂–∞',
    emoji: 'üíÜ‚Äç‚ôÄÔ∏è',
    type: 'blue' as const,
    amount: 1,
    message: '–†–∞—Å—Å–ª–∞–±—å—Å—è, —è –ø–æ–∑–∞–±–æ—á—É—Å—å –æ —Ç–µ–±–µ',
    description: '–†–µ–ª–∞–∫—Å–∞—Ü–∏—è –∏ –∑–∞–±–æ—Ç–∞'
  },
  {
    id: 'romantic-surprise',
    name: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å—é—Ä–ø—Ä–∏–∑',
    emoji: 'üåπ',
    type: 'red' as const,
    amount: 1,
    message: '–ì–æ—Ç–æ–≤–ª—é —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ... ‚ù§Ô∏è',
    description: '–û—Å–æ–±–µ–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç'
  },
  {
    id: 'love-bomb',
    name: '–ë–æ–º–±–∞ –ª—é–±–≤–∏',
    emoji: 'üí£',
    type: 'red' as const,
    amount: 2,
    message: '–í–∑—Ä—ã–≤ –ª—é–±–≤–∏ –∏ –Ω–µ–∂–Ω–æ—Å—Ç–∏!',
    description: '2 –∫—Ä–∞—Å–Ω—ã—Ö –∂–µ–ª–∞–Ω–∏—è'
  }
];

export default function GiftInterface({ 
  currentUserId, 
  partnerUserId, 
  partnerName, 
  onGiftSent 
}: GiftInterfaceProps) {
  const [quotas, setQuotas] = useState<EconomyQuotas | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [showCustomGifter, setShowCustomGifter] = useState(false);
  const [sendingGift, setSendingGift] = useState<string | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–≤–æ—Ç
  const loadQuotas = async () => {
    try {
      setLoading(true);
      const { ApiClient } = await import('../../lib/api-client');
      const response = await ApiClient.get('/api/economy/quotas');
      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–≤–æ—Ç');
      }
      const data = await response.json();
      setQuotas(data.quotas);
    } catch (err) {
      setError(err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    loadQuotas();
  }, []);

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞
  const handleQuickGift = async (preset: typeof quickGiftPresets[0]) => {
    if (!quotas || quotas.daily.used >= quotas.daily.limit) {
      return;
    }

    setSendingGift(preset.id);
    try {
      const giftRequest: GiftWishRequest = {
        recipient_id: partnerUserId,
        type: preset.type,
        amount: preset.amount,
        message: preset.message
      };

      const { ApiClient } = await import('../../lib/api-client');
      const response = await ApiClient.post('/api/economy/gift', giftRequest);

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞');
      }

      await loadQuotas(); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–≤–æ—Ç—ã
      onGiftSent?.();
    } catch (err) {
      setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞');
    } finally {
      setSendingGift(null);
    }
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞
  const handleCustomGift = async (giftRequest: GiftWishRequest) => {
    try {
      const { ApiClient } = await import('../../lib/api-client');
      const response = await ApiClient.post('/api/economy/gift', giftRequest);

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞');
      }

      await loadQuotas(); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–≤–æ—Ç—ã
      setShowCustomGifter(false);
      onGiftSent?.();
    } catch (err) {
      throw err; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ WishGifter
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="text-center">
          <div className="animate-spin text-3xl mb-3">üéÅ</div>
          <p className="text-gray-600 dark:text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–¥–∞—Ä–∫–æ–≤...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-700 rounded-2xl p-6">
        <div className="flex items-center gap-3">
          <span className="text-2xl">‚ùå</span>
          <div>
            <h3 className="font-semibold text-red-800 dark:text-red-200">–û—à–∏–±–∫–∞</h3>
            <p className="text-red-700 dark:text-red-300">{error}</p>
          </div>
        </div>
        <button
          onClick={loadQuotas}
          className="mt-4 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    );
  }

  if (showCustomGifter) {
    return (
      <WishGifter
        onGiftWish={handleCustomGift}
        onCancel={() => setShowCustomGifter(false)}
        recipientId={partnerUserId}
        recipientName={partnerName}
        currentQuotas={quotas || undefined}
      />
    );
  }

  const canGift = quotas ? quotas.daily.used < quotas.daily.limit : false;
  const remainingGifts = quotas ? quotas.daily.limit - quotas.daily.used : 0;

  return (
    <div className="bg-white dark:bg-gray-800 p-6 rounded-2xl border border-gray-200 dark:border-gray-700 shadow-sm">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-2xl font-bold text-gray-800 dark:text-gray-200">
          üéÅ –ë—ã—Å—Ç—Ä—ã–µ –ø–æ–¥–∞—Ä–∫–∏
        </h2>
        <button
          onClick={() => setShowCustomGifter(true)}
          className="px-4 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-600 transition-colors text-sm font-medium"
        >
          üé® –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫
        </button>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ –∏ –∫–≤–æ—Ç–∞—Ö */}
      <div className="mb-6 p-4 bg-gradient-to-r from-pink-50 to-purple-50 dark:from-pink-900/30 dark:to-purple-900/30 rounded-lg border border-pink-200 dark:border-pink-700">
        <div className="flex items-center justify-between">
          <div>
            <p className="text-sm font-medium text-pink-700 dark:text-pink-300">
              –ü–æ–ª—É—á–∞—Ç–µ–ª—å: <span className="font-bold">{partnerName}</span>
            </p>
            <p className="text-xs text-pink-600 dark:text-pink-400">
              –ü–æ–¥–∞—Ä–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—é –∂–µ–ª–∞–Ω–∏–π
            </p>
          </div>
          <div className="text-right">
            <p className="text-sm font-medium text-purple-700 dark:text-purple-300">
              –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–¥–∞—Ä–∫–æ–≤: <span className="font-bold">{remainingGifts}</span>
            </p>
            <p className="text-xs text-purple-600 dark:text-purple-400">
              –∏–∑ {quotas?.daily.limit} –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            </p>
          </div>
        </div>
      </div>

      {!canGift && (
        <div className="mb-6 p-4 bg-red-50 dark:bg-red-900/30 rounded-lg border border-red-200 dark:border-red-700">
          <div className="flex items-center gap-3">
            <span className="text-2xl">‚ö†Ô∏è</span>
            <div>
              <h4 className="font-semibold text-red-800 dark:text-red-200">
                –î–Ω–µ–≤–Ω–∞—è –∫–≤–æ—Ç–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–∞
              </h4>
              <p className="text-sm text-red-700 dark:text-red-300">
                –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ –ø–æ–¥–∞—Ä–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞ –∏–ª–∏ –ø–æ–≤—ã—Å—å—Ç–µ —Ä–∞–Ω–≥ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–≤–æ—Ç.
              </p>
            </div>
          </div>
        </div>
      )}

      {/* –ë—ã—Å—Ç—Ä—ã–µ –ø–æ–¥–∞—Ä–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {quickGiftPresets.map((preset) => {
          const isLoading = sendingGift === preset.id;
          const typeEmoji = preset.type === 'green' ? 'üíö' : preset.type === 'blue' ? 'üíô' : '‚ù§Ô∏è';
          
          return (
            <button
              key={preset.id}
              onClick={() => handleQuickGift(preset)}
              disabled={!canGift || isLoading}
              className={`p-5 rounded-xl border-2 text-left transition-all duration-200 ${
                canGift && !isLoading
                  ? 'border-gray-200 dark:border-gray-600 hover:border-purple-300 dark:hover:border-purple-500 hover:shadow-lg hover:scale-105 bg-white dark:bg-gray-700'
                  : 'border-gray-200 dark:border-gray-600 bg-gray-50 dark:bg-gray-700/50 opacity-50 cursor-not-allowed'
              }`}
            >
              <div className="flex items-center gap-3 mb-3">
                <div className="w-12 h-12 bg-gradient-to-br from-purple-100 to-pink-100 dark:from-purple-900/50 dark:to-pink-900/50 rounded-xl flex items-center justify-center border border-purple-200 dark:border-purple-700">
                  <span className="text-2xl">{isLoading ? '‚è≥' : preset.emoji}</span>
                </div>
                <div className="flex-1">
                  <h4 className="font-semibold text-gray-800 dark:text-gray-200">
                    {preset.name}
                  </h4>
                  <p className="text-xs text-gray-600 dark:text-gray-400">
                    {preset.description}
                  </p>
                </div>
              </div>

              <div className="flex items-center justify-between mb-3">
                <div className="flex items-center gap-2">
                  <span className="text-lg">{typeEmoji}</span>
                  <span className="text-sm font-medium text-gray-700 dark:text-gray-300">
                    {preset.amount} √ó {preset.type === 'green' ? '–ó–µ–ª–µ–Ω–æ–µ' : preset.type === 'blue' ? '–°–∏–Ω–µ–µ' : '–ö—Ä–∞—Å–Ω–æ–µ'}
                  </span>
                </div>
              </div>

              <div className="p-3 bg-gray-50 dark:bg-gray-600/50 rounded-lg border border-gray-200 dark:border-gray-600">
                <p className="text-sm text-gray-700 dark:text-gray-300 italic">
                  "{preset.message}"
                </p>
              </div>

              {isLoading && (
                <div className="mt-3 text-center">
                  <p className="text-sm text-purple-600 dark:text-purple-400 font-medium">
                    –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–∞—Ä–æ–∫...
                  </p>
                </div>
              )}
            </button>
          );
        })}
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="mt-6 p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg border border-blue-200 dark:border-blue-700">
        <h4 className="font-semibold text-blue-800 dark:text-blue-200 mb-2">
          üí° –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ–¥–∞—Ä–∫–∏
        </h4>
        <div className="text-sm text-blue-700 dark:text-blue-300 space-y-1">
          <p>‚Ä¢ <strong>–ë—ã—Å—Ç—Ä—ã–µ –ø–æ–¥–∞—Ä–∫–∏</strong> - –≥–æ—Ç–æ–≤—ã–µ –Ω–∞–±–æ—Ä—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π</p>
          <p>‚Ä¢ <strong>–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫</strong> - —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ —Å –≤–∞—à–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º</p>
          <p>‚Ä¢ –ü–æ–¥–∞—Ä–∫–∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ—è–≤–ª—è—é—Ç—Å—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è</p>
          <p>‚Ä¢ –ö–∞–∂–¥—ã–π –ø–æ–¥–∞—Ä–æ–∫ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤–∞—à –æ–ø—ã—Ç –∏ —É–∫—Ä–µ–ø–ª—è–µ—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏—è</p>
        </div>
      </div>
    </div>
  );
}