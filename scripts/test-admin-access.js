// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
const { neon } = require('@neondatabase/serverless');

const ADMIN_TELEGRAM_ID = process.env.ADMIN_TELEGRAM_ID || '507387437';
const DATABASE_URL = process.env.DATABASE_URL;

if (!DATABASE_URL) {
  console.error('‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  process.exit(1);
}

const sql = neon(DATABASE_URL);

// –ö–æ–ø–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é validateAdminAccess –∏–∑ admin-security.ts
async function validateAdminAccess(userId) {
  try {
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π –¥–æ—Å—Ç—É–ø –¥–ª—è userId: ${userId}`);
    console.log(`üîß ADMIN_TELEGRAM_ID: ${ADMIN_TELEGRAM_ID}`);
    
    // If userId looks like a Telegram ID (numeric string), search by telegram_id
    // Otherwise, search by UUID
    let result;
    if (/^\d+$/.test(userId)) {
      console.log('üì± userId –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ Telegram ID, –∏—â–µ–º –ø–æ telegram_id');
      result = await sql`
        SELECT telegram_id FROM users WHERE telegram_id = ${userId}
      `;
    } else {
      console.log('üÜî userId –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ UUID, –∏—â–µ–º –ø–æ id');
      result = await sql`
        SELECT telegram_id FROM users WHERE id = ${userId}
      `;
    }
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${result.length}`);
    if (result.length > 0) {
      console.log(`üìã telegram_id –∏–∑ –ë–î: ${result[0].telegram_id}`);
      console.log(`üîç –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º: "${result[0].telegram_id}" === "${ADMIN_TELEGRAM_ID}"`);
    }
    
    if (result.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return false;
    }
    
    const isAdmin = result[0].telegram_id === ADMIN_TELEGRAM_ID;
    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: ${isAdmin}`);
    return isAdmin;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞:', error);
    return false;
  }
}

async function testAdminAccess() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π –¥–æ—Å—Ç—É–ø...\n');
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ Telegram ID
    console.log('=== –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ Telegram ID ===');
    const result1 = await validateAdminAccess('507387437');
    console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç: ${result1 ? '‚úÖ –ê–î–ú–ò–ù' : '‚ùå –ù–ï –ê–î–ú–ò–ù'}\n`);
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ UUID
    console.log('=== –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ UUID ===');
    const result2 = await validateAdminAccess('9a68130c-2592-4b6e-a6aa-01475caf8d40');
    console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç: ${result2 ? '‚úÖ –ê–î–ú–ò–ù' : '‚ùå –ù–ï –ê–î–ú–ò–ù'}\n`);
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ ID
    console.log('=== –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ ID ===');
    const result3 = await validateAdminAccess('123456789');
    console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç: ${result3 ? '‚úÖ –ê–î–ú–ò–ù' : '‚ùå –ù–ï –ê–î–ú–ò–ù'}\n`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    process.exit(1);
  }
}

testAdminAccess();